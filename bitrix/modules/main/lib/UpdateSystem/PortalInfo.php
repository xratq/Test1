<? namespace Bitrix\Main\UpdateSystem;$GLOBALS['____1386284440']= array(base64_decode('Z'.'G'.'VmaW'.'5l'.'ZA'.'=='),base64_decode('ZnV'.'u'.'Y3Rpb25'.'fZX'.'hpc3Rz'),base64_decode('ZGVma'.'W5'.'lZA'.'='.'='),base64_decode('cGh'.'wdmVyc2lvbg=='),base64_decode('Y2xhc3N'.'f'.'ZX'.'hpc3Rz'));if(!function_exists(__NAMESPACE__.'\\___630011673')){function ___630011673($_467680713){static $_369986933= false; if($_369986933 == false) $_369986933=array('TElD'.'RU'.'5TRV'.'9LR'.'Vk=',''.'bGFuZw==','dXRm','Ql'.'h'.'fVVR'.'G','WQ==','Tg==',''.'c3Rh'.'Ymxl','bWF'.'pbg==',''.'c3Rh'.'Ymxl'.'X3ZlcnN'.'pb25zX2'.'9'.'ubHk=','WQ==','Q0FO'.'R1'.'p'.'JUA'.'==','Z3pjb21wcmVzcw'.'==','WQ'.'==',''.'Tg='.'=',''.'U'.'1'.'VQR'.'F'.'9EQl'.'M=',''.'WEU=','WQ==','Tg='.'=','U'.'1VQRF'.'9V'.'U'.'lM=','Q0xJRU5UX1N'.'JVEU=','U'.'0VSVkVSX05BTUU'.'=','c3Bk','bWFpbg==',''.'Y'.'3'.'JjX'.'2NvZG'.'U'.'=','','ZGJ'.'2','U'.'1V'.'Q'.'RF9WRVI=','VV'.'BEQVRFX1'.'NZU1RFTV9WRVJ'.'TSU9OX0E=','','U'.'1VQRF9TUl'.'M=','UlU=','U1V'.'Q'.'R'.'F9DTV'.'A=','T'.'g==','U1VQ'.'RF9'.'TVFM=','UkE=',''.'TElD'.'RU5TRV9'.'TSUdOR'.'UQ=','Q0'.'xJRU5UX'.'1BIUFZFUg==','TkdJT'.'lg=','b'.'WFpbg='.'=','dXBkYX'.'R'.'l'.'X3V'.'z'.'ZV9'.'uZ'.'2lueA='.'=','WQ'.'==','U01E',''.'bWFpbg==','dXBkYXRlX3'.'NhZmVfbW9k'.'ZQ==','Tg==','VkV'.'S'.'U0'.'lPTg==','VFlQRU'.'5'.'D',''.'Q0h'.'IQg'.'==',''.'SFR'.'UUF9IT1N'.'U','Q1'.'NB'.'Qg==','U'.'0'.'VS'.'VkVSX'.'0'.'F'.'ERFI=','U1VJRA'.'==','QV'.'BQ'.'TE'.'lD'.'QVRJ'.'T04=','','Y'.'2x1c'.'3'.'Rlc'.'g==',''.'Q0N'.'s'.'d'.'XN0ZXI=','PU'.'FDVElW'.'RQ==','WQ==','L2JpdHJpeC'.'9tb2'.'R1bGVzL21haW'.'4vY2x'.'hc3Nlcy9'.'n'.'ZW5lcmFs'.'L3Vw'.'ZGF0Z'.'V'.'9jbG'.'llbnQucGhw','LQ'.'==','bWFpbg==','Tg==','RA='.'=',''.'RQ==','VA==','R'.'g==','L2JpdHJpe'.'C9tb2R1'.'bG'.'VzL21'.'ha'.'W4vY'.'2xhc'.'3N'.'l'.'cy'.'9nZW5lcm'.'Fs'.'L'.'3V'.'wZ'.'GF0ZV9'.'jbG'.'l'.'lbnQ'.'uc'.'Ghw','','L2'.'J'.'pdHJp'.'eC9t'.'b'.'2'.'R1bGVzL21haW4v'.'Y2x'.'hc3Nl'.'c'.'y9nZ'.'W'.'5l'.'cmF'.'sL3VwZGF0Z'.'V9jbGllbnQuc'.'G'.'hw','');return base64_decode($_369986933[$_467680713]);}}; use Bitrix\Main\Application; use Bitrix\Main\License; use Bitrix\Main\Loader; use Bitrix\Main\SystemException; use Bitrix\Main\SiteTable; class PortalInfo{ private License $_1401997722; public function __construct(){ $this->_1401997722= Application::getInstance()->getLicense();} public function common(): array{ global $DB; return[ ___630011673(0) => $this->_1401997722->getHashLicenseKey(), ___630011673(1) => LANGUAGE_ID, ___630011673(2) => $GLOBALS['____1386284440'][0](___630011673(3))? ___630011673(4): ___630011673(5), ___630011673(6) => \COption::GetOptionString(___630011673(7), ___630011673(8), ___630011673(9)), ___630011673(10) => $GLOBALS['____1386284440'][1](___630011673(11))? ___630011673(12): ___630011673(13), ___630011673(14) => $DB->type, ___630011673(15) =>(isset($DB->_297139117) && $DB->_297139117)? ___630011673(16): ___630011673(17), ___630011673(18) => $this->_1401997722->getActiveUsersCount(), ___630011673(19) => $_SERVER[___630011673(20)], ___630011673(21) => \COption::GetOptionString(___630011673(22), ___630011673(23), ___630011673(24)), ___630011673(25) => $this->__893767134(), ___630011673(26) => $GLOBALS['____1386284440'][2](___630011673(27))? UPDATE_SYSTEM_VERSION_A: ___630011673(28), ___630011673(29) => $this->__1755089995() ?? ___630011673(30), ___630011673(31) => ___630011673(32), ___630011673(33) => $this->__752166398() ?? ___630011673(34), ___630011673(35) => $this->__377046000(), ___630011673(36) => $GLOBALS['____1386284440'][3](), ___630011673(37) => \COption::GetOptionString(___630011673(38), ___630011673(39), ___630011673(40)), ___630011673(41) => \COption::GetOptionString(___630011673(42), ___630011673(43), ___630011673(44)), ___630011673(45) => SM_VERSION, ___630011673(46) => $this->getLicenseType(), ___630011673(47) => $_SERVER[___630011673(48)], ___630011673(49) => $_SERVER[___630011673(50)], ___630011673(51) => $GLOBALS[___630011673(52)]->GetServerUniqID(),];} private function __893767134(): string{ global $DB; $_1048273018= $DB->GetVersion(); return $_1048273018 !== false? $_1048273018: ___630011673(53);} private function __1755089995():?int{ if(Loader::includeModule(___630011673(54)) && $GLOBALS['____1386284440'][4](___630011673(55))){ return \CCluster::getServersCount();} return null;} private function __752166398():?int{ return SiteTable::getCount([___630011673(56) => ___630011673(57)]);} private function __377046000(): string{ require_once(Application::getDocumentRoot(). ___630011673(58)); $_1812989835= \CUpdateClient::getNewLicenseSignedKey(); return $_1812989835.___630011673(59).\COption::GetOptionString(___630011673(60), $_1812989835, ___630011673(61));} public function getLicenseType(): string{ if($this->_1401997722->isDemo()){ return ___630011673(62);} elseif($this->_1401997722->isEncoded()){ return ___630011673(63);} elseif($this->_1401997722->isTimeBound()){ return ___630011673(64);} else{ return ___630011673(65);}} public function getModules(): array{ require_once(Application::getDocumentRoot(). ___630011673(66)); $_1820142966= ___630011673(67); $_792237244= \CUpdateClient::GetCurrentModules($_1820142966); $_1254016118=(\CUpdateExpertMode::isEnabled() && \CUpdateExpertMode::isCorrectModulesStructure([])); if($_1254016118){ $_792237244= \CUpdateExpertMode::processModulesFrom([], $_792237244);} if(!empty($_1820142966)){ throw new SystemException($_1820142966);} return $_792237244;} public function getLanguages(): array{ require_once(Application::getDocumentRoot(). ___630011673(68)); $_1820142966= ___630011673(69); $_1981256996= \CUpdateClient::GetCurrentLanguages($_1820142966); if(!empty($_1820142966)){ throw new SystemException($_1820142966);} return $_1981256996;}}?>